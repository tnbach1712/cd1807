name: Azure Pipelines

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- main

pool:
  name: default

variables:
  python.version: '3.7.6'
  azureServiceConnectionId: 'e56e48d6-bf0d-48af-90e1-f5ed15400daa' #'myServiceConnection'
  projectRoot: $(System.DefaultWorkingDirectory)
  environmentName: 'test'
  backendAzureRmResourceGroupName: 'bachtn-demo'
  backendAzureRmStorageAccountName: 'tfstate2176126194'
  backendAzureRmContainerName: 'tfstate'

stages:
- stage: Install dependencies
  jobs:
  - job: InstallDependencies
    steps:
    - task: CmdLine@2
      displayName: Check Terraform Installed
      inputs:
        script: 'echo $(terraform -v)'
        workingDirectory: $(System.DefaultWorkingDirectory)
    - task: CmdLine@2
      displayName: Install Terraform if not exists
      continueOnError: true
      condition: failed()
      inputs:
        script: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | \
          gpg --dearmor | \
          sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
          https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
          sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform
        workingDirectory: $(System.DefaultWorkingDirectory)
- stage: build
  jobs:
    - job: build
      steps:
      - task: CmdLine@2
        displayName: Install Terraform
        inputs:
          script: 'terraform -v'
          workingDirectory: $(System.DefaultWorkingDirectory)
      - task: CmdLine@2
        displayName: Terraform Init
        inputs:
          script: 'terraform init'
          workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environments/test
      - task: CmdLine@2
        displayName: Terraform Validate
        inputs:
          script: 'terraform validate'
          workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environments/test
      - task: CmdLine@2
        displayName: Terraform Plan
        inputs:
          script: 'terraform plan'
          workingDirectory: $(System.DefaultWorkingDirectory)/terraform/environments/test